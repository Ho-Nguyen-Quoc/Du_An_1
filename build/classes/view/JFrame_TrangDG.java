/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.KhoSachDAO;
import dao.LoaiSachDAO;
import entities.KhoSach;
import entities.LoaiSach;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.Cache_KH;
import model.Data;
import model.Util;

/**
 *
 * @author abc
 */
public final class JFrame_TrangDG extends javax.swing.JFrame implements InterfaceForm<KhoSach> {
    
    private static final long serialVersionUID = 1L;

    /**
     * Creates new form JFrame_DocGia
     */
    public JFrame_TrangDG() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.Onceload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbdpane = new javax.swing.JTabbedPane();
        pnlTable = new javax.swing.JPanel();
        spnLoai = new javax.swing.JScrollPane();
        tblLoaiSach = new javax.swing.JTable();
        spnKho = new javax.swing.JScrollPane();
        tblKhoSach = new javax.swing.JTable();
        lblAnh = new javax.swing.JLabel();
        lblAnh1 = new javax.swing.JLabel();
        pnlQL = new javax.swing.JPanel();
        lblheading = new javax.swing.JLabel();
        lblReader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblLoaiSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblLoaiSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LoaiID", "Tên loại sách", "Tủ số"
            }
        ));
        tblLoaiSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiSachMouseClicked(evt);
            }
        });
        tblLoaiSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblLoaiSachKeyReleased(evt);
            }
        });
        spnLoai.setViewportView(tblLoaiSach);
        if (tblLoaiSach.getColumnModel().getColumnCount() > 0) {
            tblLoaiSach.getColumnModel().getColumn(0).setMaxWidth(80);
            tblLoaiSach.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        tblKhoSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblKhoSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SachID", "TÊN SÁCH", "NHÀ XUẤT BẢN", "TÁC GIẢ", "SỐ LƯỢNG", "ĐƠN GIÁ", "NGÀY NHẬP", "KỆ SỐ"
            }
        ));
        tblKhoSach.setToolTipText("");
        tblKhoSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoSachMouseClicked(evt);
            }
        });
        tblKhoSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblKhoSachKeyReleased(evt);
            }
        });
        spnKho.setViewportView(tblKhoSach);
        if (tblKhoSach.getColumnModel().getColumnCount() > 0) {
            tblKhoSach.getColumnModel().getColumn(0).setMaxWidth(100);
            tblKhoSach.getColumnModel().getColumn(4).setMaxWidth(80);
            tblKhoSach.getColumnModel().getColumn(5).setMaxWidth(80);
            tblKhoSach.getColumnModel().getColumn(6).setMaxWidth(150);
            tblKhoSach.getColumnModel().getColumn(7).setMaxWidth(80);
        }

        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAnh1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spnLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(lblAnh1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnKho, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnKho, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(spnLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(lblAnh1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        tbdpane.addTab("Xem kho sách", pnlTable);

        javax.swing.GroupLayout pnlQLLayout = new javax.swing.GroupLayout(pnlQL);
        pnlQL.setLayout(pnlQLLayout);
        pnlQLLayout.setHorizontalGroup(
            pnlQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 885, Short.MAX_VALUE)
        );
        pnlQLLayout.setVerticalGroup(
            pnlQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        tbdpane.addTab("Quản lý phiếu mượn", pnlQL);

        lblheading.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblheading.setText("THƯ VIỆN SÁCH");

        lblReader.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblReader.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblReader.setText("Dg0000 - Nguyễn Văn Tên");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblheading, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblReader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tbdpane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblheading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblReader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbdpane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblLoaiSachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblLoaiSachKeyReleased
        int k = evt.getKeyCode();
        if (k == 33 || k == 34 || k == 38 || k == 40) {
            this.ClickTableLoai();
        }
    }//GEN-LAST:event_tblLoaiSachKeyReleased

    private void tblLoaiSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSachMouseClicked
        this.ClickTableLoai();
    }//GEN-LAST:event_tblLoaiSachMouseClicked

    private void tblKhoSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoSachMouseClicked
        this.fillImg();
    }//GEN-LAST:event_tblKhoSachMouseClicked

    private void tblKhoSachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblKhoSachKeyReleased
        int k = evt.getKeyCode();
        if (k == 33 || k == 34 || k == 38 || k == 40) {
            this.fillImg();
        }
    }//GEN-LAST:event_tblKhoSachKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_TrangDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_TrangDG().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblAnh1;
    private javax.swing.JLabel lblReader;
    private javax.swing.JLabel lblheading;
    private javax.swing.JPanel pnlQL;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JScrollPane spnKho;
    private javax.swing.JScrollPane spnLoai;
    private javax.swing.JTabbedPane tbdpane;
    private javax.swing.JTable tblKhoSach;
    private javax.swing.JTable tblLoaiSach;
    // End of variables declaration//GEN-END:variables

    private KhoSachDAO Kdao;
    private List<KhoSach> KSach = new ArrayList<>();
    private DefaultTableModel model = null;
    
    private void Onceload() {
        this.isLoginDg();
        LoaiSachDAO dao = new LoaiSachDAO();
        List<LoaiSach> ls = dao.SelectALL();
        model = (DefaultTableModel) tblLoaiSach.getModel();
        model.setRowCount(0);
        
        if (ls != null) {
            Object[] rows = {"ALL", "Xem tất cả", "all"};
            model.addRow(rows);
            ls.forEach((LoaiSach obj) -> {
                model.addRow(dao.convertArray(obj));
            });

            // Tạo lại lớp dao (tránh dùng dữ liệu cũ) 
            Kdao = new KhoSachDAO();
            this.fillTableSach("ALL");
        }
    }
    
    private void isLoginDg() {
        if (Cache_KH.isLogin()) {
            this.lblAnh1.setIcon(Cache_KH.getImage());
            this.lblReader.setText(Cache_KH.getDg().getDgID() 
                    + " - " + Cache_KH.getDg().getHoTen());
        }
    }
    
    private void fillTableSach(String LoaiID) {
        model = (DefaultTableModel) this.tblKhoSach.getModel();
        model.setRowCount(0);
        //custom(0) - Select ... where LoaiID = ?
        String query = LoaiID.equalsIgnoreCase("ALL")
                ? "Select * from dbo.KhoSach" : Kdao.getCustomSQL(0);
        if (query != null) {
            this.KSach = query.endsWith("KhoSach")
                    ? Kdao.SelectALL(query) : Kdao.SelectALL(query, LoaiID);
            
            if (this.KSach != null) {
                this.KSach.forEach((x) -> {
                    Object[] rows = {
                        x.getSachID(), x.getTenSach(), x.getNhaxb(),
                        x.getTacGia(), x.getSoLuong(), x.getDonGia(),
                        x.getNgayNhap(), x.getKeSo()
                    };
                    model.addRow(rows);
                });
            }
        }
    }
    
    private void fillImg() {
        String value = this.getValue(tblKhoSach, "SachID");
        KhoSach sach = Kdao.SelectByID(value);
        
        this.lblAnh.setIcon(Data.convert.Image(
                Util.Image.getIcon("images/Sach/" + sach.getHinh()),
                 140, 140)
        );
    }
    
    private String getValue(JTable table, String nameCol) {
        int column = this.findColumnName(table, nameCol);
        int row = table.getSelectedRow();
        return table.getValueAt(row, column).toString();
    }
    
    private void ClickTableLoai() {
        this.fillTableSach(this.getValue(this.tblLoaiSach, "LoaiID"));
    }
    
    @Override
    public void Insert() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public void update() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public void delete() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public int findList(Object key) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public KhoSach getForm() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public void setForm(KhoSach data) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public void clearForm() {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    @Override
    public boolean validateData(KhoSach data) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
